#!/usr/bin/perl
use strict;
use Getopt::Long;
use JSON;
use Digest::SHA qw(sha256_hex);
use POSIX qw(strftime);
use Smokes::Helpers::Dbh;
use Smokes::Tooling::ParseSmokeDB qw(parse_smoke_report);
use Smokes::Helpers::Sensible;

my $verbose;
my $update;
my $by_id;
GetOptions("v|verbose" => \$verbose,
	   "u|update" => \$update,
	   "i|by_id" => \$by_id);
++$| if $verbose;

if ($update) {
    parse_update_smokedb_to_db($verbose);
}
elsif ($by_id) {
    parse_by_id_smokedb_to_db($verbose, \@ARGV);
}
else {
    parse_new_smokedb_to_db($verbose);
}


sub parse_new_smokedb_to_db ($verbose) {
    my $schema = Smokes::Helpers::Dbh->schema;
    my $p5s = $schema->resultset("Perl5Smoke");
    my $pr = $schema->resultset("ParsedReport");
    my $query = $p5s->search
	(
	 { 'parsed_report.smokedb_id' => undef },
	 {
	     join => 'parsed_report',
	     order_by => "report_id",
	 },
	);
    my $total_count;
    if ($verbose) {
	$total_count = $query->count;
	print "$total_count reports to process\n";
    }

    my @insert_cols = $pr->insert_columns;

    my $done_count = 0;
    my $json = JSON->new->utf8;
    while (my $report = $query->next) {
	if ($verbose) {
	    print "$done_count / $total_count\r";
	}

	my $result = parse_smoke_report($report->raw_report, $verbose);

	$result->{smokedb_id} = $report->report_id;
	$result->{when_at} =
	  strftime("%Y-%m-%d %H:%M:%S", gmtime $report->fetched_at);

	my %ins;
	@ins{@insert_cols} = @$result{@insert_cols};
	$pr->create(\%ins);

	++$done_count;
    }
}

sub parse_update_smokedb_to_db ($verbose) {
    my $schema = Smokes::Helpers::Dbh->schema;
    my $p5s = $schema->resultset("Perl5Smoke");
    my $pr = $schema->resultset("ParsedReport");
    my $query = $pr->search
	(
	 {
	     need_update => { '!=' => 0 },
	     smokedb_id => { '!=' => undef },
	 },
	 { order_by => \'smokedb_id desc' }
	);
    my $total_count;
    if ($verbose) {
	$total_count = $query->count;
	print "$total_count reports to process\n";
    }

    my @insert_cols = $pr->insert_columns;

    my $done_count = 0;
    #$schema->storage->debug(1);
    while (my $parsed = $query->next) {
      #$schema->storage->debug(1);
	if ($verbose) {
	    print "$done_count / $total_count\r";
	}
	my $smokedb = $parsed->smokedb;
	if ($smokedb) {
	    update_smokedb_to_db($smokedb, $parsed, $verbose);
	}
	else {
	    print "No smoke report ", $parsed->smokedb_id, " found for parsed report ", $parsed->id, "\n";
	}

	++$done_count;
    }
}

sub parse_by_id_smokedb_to_db($verbose, $ids) {
    my $schema = Smokes::Helpers::Dbh->schema;
    my $p5s = $schema->resultset("Perl5Smoke");
    my $pr = $schema->resultset("ParsedReport");

    for my $id (@$ids) {
      my $parsed = $pr->find({ smokedb_id => $id })
	or die "Cannot find parsed smokedb report $id\n";
      my $report = $p5s->find({ report_id => $id })
	or die "Cannot find smokedb entry $id\n";
      update_smokedb_to_db($report, $parsed, $verbose);
    }
}

sub update_smokedb_to_db ($report, $parsed, $verbose) {
  my $result = parse_smoke_report($report->raw_report, $verbose);
  $result->{need_update} = 0;
  my @update_cols = grep exists $result->{$_}, $parsed->update_columns;
  my %update;
  @update{@update_cols} = @$result{@update_cols};
  $parsed->update(\%update);
}
